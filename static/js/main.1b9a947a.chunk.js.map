{"version":3,"sources":["components/shop-header/index.js","components/shop-header/shop-header.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","servisec/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["ShopHeader","connect","shoppingCart","orderTotal","orderItemsCount","className","to","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","bookAddedToCart","bookId","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","compose","funcs","comp","reduceRight","wrapped","f","Spinner","ErrorIndicator","BookList","books","map","key","id","BookListContainer","this","loading","error","Component","Booklist","bookList","ownProps","mapDispatchToProps","onIcrease","onDecrease","onDelete","ShoppingCartTable","items","cartItems","total","item","idx","count","HomePage","CartPage","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.1b9a947a.chunk.js","sourcesContent":["import ShopHeader from './shop-header';\n\nexport default ShopHeader;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './shop-header.css';\n\nconst ShopHeader = ({ orderTotal, orderItemsCount }) => {\n    return (\n        <header className=\"shop-header row\">\n            <Link to=\"/\">\n                <div className=\"logo text-dark\">ReStore</div>\n            </Link>\n            <Link to=\"/cart\">\n                <div className=\"shopping-cart\" >\n                    <i className=\"cart-icon fa fa-shopping-cart\" />\n                    {orderItemsCount} items (${orderTotal})</div>\n            </Link>\n        </header>\n    );\n};\n\nconst mapStateToProps = ({ shoppingCart: { orderTotal, orderItemsCount } }) => {\n    return { orderTotal, orderItemsCount }\n}\n\nexport default connect(mapStateToProps)(ShopHeader);","import BookListItem from './book-list-item';\n\nexport default BookListItem;","import React from 'react';\nimport './book-list-item.css';\n\nconst BookListItem = ({ book, onAddedToCart }) => {\n    const { title, author, price, coverImage } = book;\n    return (\n      <div className=\"book-list-item\">\n        <div className=\"book-cover\">\n          <img src={coverImage} alt=\"cover\" />\n        </div>\n        <div className=\"book-details\">\n          <span className=\"book-title\">{title}</span>\n          <div className=\"book-author\">{author}</div>\n          <div className=\"book-price\">${price}</div>\n          <button \n          onClick={onAddedToCart}\n          className=\"btn btn-info add-to-cart\">Add to cart</button>\n        </div>\n  \n      </div>\n    );\n  };\n  \n\n\nexport default BookListItem;","import React from 'react';\n\nconst {\n    Provider: BookstoreServiceProvider,\n    Consumer: BookstoreServiceConsumer\n} = React.createContext();\n\nexport {\n    BookstoreServiceProvider,\n    BookstoreServiceConsumer\n}","import React from 'react';\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\n\nconst withBookstoreService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <BookstoreServiceConsumer>\n                {\n                    (bookstoreService) => {\n                        return (\n                            <Wrapped {...props} bookstoreService={bookstoreService} />\n                        )\n\n                    }\n                }\n            </BookstoreServiceConsumer>\n        )\n    }\n}\n\nexport default withBookstoreService;","const booksRequested = () => {\n    return {\n        type: 'FETCH_BOOKS_REQUEST',\n    }\n};\n\nconst booksLoaded = (newBooks) => {\n    return {\n        type: 'FETCH_BOOKS_SUCCESS',\n        payload: newBooks\n    };\n};\n\nconst booksError = (error) => {\n    return {\n        type: 'FETCH_BOOKS_FAILURE',\n        payload: error\n    }\n};\n\nexport const bookAddedToCart = (bookId) => {\n    return {\n        type: 'BOOK_ADDED_TO_CART', \n        payload: bookId\n    }\n};\n\nexport const bookRemoveFromCart = (bookId) => {\n    return {\n        type: 'BOOK_REMOVED_FROM_CART', \n        payload: bookId\n    }\n};\n\nexport const allBooksRemoveFromCart = (bookId) => {\n    return {\n        type: 'ALL_BOOKS_REMOVED_FROM_CART', \n        payload: bookId\n    }\n};\n\nconst fetchBooks = (bookstoreService, dispatch) => () => {\n    dispatch(booksRequested());\n    bookstoreService.getBooks()\n        .then((data) => dispatch(booksLoaded(data)))\n        .catch((err) => dispatch(booksError(err)));\n};\n\nexport {\n   fetchBooks\n};","const compose = (...funcs) => (comp) => {\n    return funcs.reduceRight(\n        (wrapped, f) => f(wrapped), comp)\n}\n\nexport default compose;","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return <div>Loading...</div>\n}\n\nexport default Spinner;","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n    return <div>Error!</div>\n}\n\nexport default ErrorIndicator;","import React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks, bookAddedToCart } from '../../actions';\nimport { compose } from '../../utils';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nimport './book-list.css';\n\nconst BookList = ({ books, onAddedToCart }) => {\n    return (\n        <ul className=\"book-list\">\n            {\n                books.map((book) => {\n                    return (\n                        <li key={book.id}>\n                            <BookListItem book={book}\n                                onAddedToCart={() => onAddedToCart(book.id)} />\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nclass BookListContainer extends Component {\n\n    componentDidMount() {\n\n        this.props.fetchBooks();\n    }\n\n    render() {\n        const { books, loading, error, onAddedToCart } = this.props;\n\n        if (loading) {\n            return <Spinner />\n        }\n\n        if (error) {\n            return <ErrorIndicator />\n        }\n        return <BookList books={books}\n            onAddedToCart={onAddedToCart} />\n\n    }\n};\n\nconst mapStateToProps = ({ bookList: { books, loading, error } }) => {\n    return { books, loading, error }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    const { bookstoreService } = ownProps;\n    return {\n        fetchBooks: fetchBooks(bookstoreService, dispatch),\n        onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n    };\n}\n\n\nexport default compose(\n    withBookstoreService(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(BookListContainer);","import Booklist from './book-list';\n\nexport default Booklist;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bookAddedToCart, bookRemoveFromCart, allBooksRemoveFromCart } from '../../actions';\nimport './shopping-cart-table.css';\n\nconst ShoppingCartTable = ({ items, total, onIcrease, onDecrease, onDelete }) => {\n    const renderRow = (item, idx) => {\n        const { id, title, total, count } = item;\n        return (\n            <tr key={id}>\n                <td>{idx + 1}</td>\n                <td>{title}</td>\n                <td>{count}</td>\n                <td>${total}</td>\n                <td>\n                    <button\n                        onClick={() => onDelete(id)}\n                        className=\"btn btn-outline-danger btn-sm float-right\">\n                        <i className=\"fa fa-trash-o\" />\n                    </button>\n                    <button\n                        onClick={() => onIcrease(id)}\n                        className=\"btn btn-outline-success btn-sm float-right\">\n                        <i className=\"fa fa-plus-circle\" />\n                    </button>\n                    <button\n                        onClick={() => onDecrease(id)}\n                        className=\"btn btn-outline-warning btn-sm float-right\">\n                        <i className=\"fa fa-minus-circle\" />\n                    </button>\n                </td>\n            </tr>\n        )\n    }\n    return (\n        <div className=\"shopping-cart-table\">\n            <h2>Your Order</h2>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Item</th>\n                        <th>Count</th>\n                        <th>Price</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {\n                        items.map(renderRow)\n                    }\n                </tbody>\n            </table>\n\n            <div className=\"total\">\n                Total: ${total}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\n    return {\n        items: cartItems,\n        total: orderTotal\n    }\n};\n\nconst mapDispatchToProps = {\n\n    onIcrease: bookAddedToCart,\n    onDecrease: bookRemoveFromCart,\n    onDelete: allBooksRemoveFromCart\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import ShoppingCartTable from './shopping-cart-table';\n\nexport default ShoppingCartTable;","import React, { Fragment } from 'react';\nimport Booklist from '../book-list';\nimport ShoppingCartTable from '../shopping-cart-table';\n\nconst HomePage = () => {\n\n    return (\n        <Fragment>\n            <Booklist />\n            <ShoppingCartTable />\n        </Fragment>\n    )\n}\n\nexport default HomePage;","import React from 'react';\nimport ShoppingCartTable from '../shopping-cart-table';\n\nconst CartPage = () => {\n    return (\n        <div>\n            <ShoppingCartTable />\n        </div>\n    )\n}\n\nexport default CartPage;","import App from './app';\n\nexport default App;","import React from 'react';\nimport './app.css';\nimport ShopHeader from '../shop-header';\nimport { Route, Switch } from 'react-router-dom';\nimport { HomePage, CartPage } from '../pages';\n\nconst App = () => {\n    return (\n        <main role=\"main\" className=\"container\">\n            <ShopHeader />\n            <Switch>\n                <Route path=\"/re-store\" component={HomePage} exact />\n                <Route path=\"/cart\" component={CartPage} />\n            </Switch>\n        </main>\n    )\n}\n\nexport default App;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator'\n\nexport default class ErrorBoundry extends Component {\n\n    state = {\n        hasError: false\n    }\n\n    componentDidCatch() {\n        this.setState({\n            hasError: true\n        })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <ErrorIndicator />\n        }\n        return this.props.children\n    }\n}","export default class BookstoreService {\n\n    data = [\n        {\n            id: 1,\n            title: 'Production-Ready Microservices',\n            author: 'Susan J. Fowler',\n            price: 32,\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'\n        },\n        {\n            id: 2,\n            title: 'Release It!',\n            author: 'Michael T. Nygard',\n            price: 45,\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'\n        }\n    ];\n\n    getBooks() {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (Math.random() > 0.75) {\n                    reject(new Error('Something bad happened'))\n                } else {\n                    resolve(this.data)\n                }\n            }, 700)\n        })\n    }\n\n}","const updateBookList = (state, action) => {\n\n    if (state === undefined) {\n        return {\n            books: [],\n            loading: true,\n            error: null,\n        }\n    };\n    switch (action.type) {\n        case 'FETCH_BOOKS_REQUEST':\n            return {\n                books: [],\n                loading: true,\n                error: null\n            }\n\n        case 'FETCH_BOOKS_SUCCESS':\n            return {\n                books: action.payload,\n                loading: false,\n                error: null\n            };\n\n        case 'FETCH_BOOKS_FAILURE':\n            return {\n                books: [],\n                loading: false,\n                error: action.payload\n            };\n        default:\n            return state.bookList;\n    }\n};\n\nexport default updateBookList;","const updateCartItems = (cartItems, item, idx) => {\n\n    if (item.count === 0) {\n        return [\n            ...cartItems.slice(0, idx),\n            ...cartItems.slice(idx + 1)\n        ]\n    }\n\n    if (idx === -1) {\n        return [\n          ...cartItems,\n          item\n        ];\n      }\n\n    return [\n        ...cartItems.slice(0, idx),\n        item,\n        ...cartItems.slice(idx + 1)\n    ]\n};\n\nconst updateCartItem = (book, item = {}, quantity) => {\n    const {\n        id = book.id,\n        count = 0,\n        title = book.title,\n        total = 0\n    } = item;\n\n    return {\n        id,\n        title,\n        count: count + quantity,\n        total: total + quantity * book.price\n    }\n};\n\nconst updateOrder = (state, bookId, quantity) => {\n    const { bookList: { books }, shoppingCart: { cartItems, orderTotal, orderItemsCount } } = state;\n    const book = books.find((book) => book.id === bookId);\n    const itemIndex = cartItems.findIndex(({ id }) => id === bookId)\n    const item = cartItems[itemIndex];\n    const newItem = updateCartItem(book, item, quantity);\n    return {\n        cartItems: updateCartItems(cartItems, newItem, itemIndex),\n        orderTotal: orderTotal + quantity * book.price,\n        orderItemsCount: orderItemsCount + quantity\n    };\n}\nconst updateShoppingCart = (state, action) => {\n\n    if (state === undefined) {\n        return {\n            cartItems: [],\n            orderTotal: 0,\n            orderItemsCount: 0\n        }\n    };\n    switch (action.type) {\n        case 'BOOK_ADDED_TO_CART':\n            return updateOrder(state, action.payload, 1);\n        case 'BOOK_REMOVED_FROM_CART':\n            return updateOrder(state, action.payload, -1);\n        case 'ALL_BOOKS_REMOVED_FROM_CART':\n            const item = state.shoppingCart.cartItems.find(({ id }) => id === action.payload)\n            return updateOrder(state, action.payload, -item.count);\n        default:\n            return state.shoppingCart;\n    }\n};\n\nexport default updateShoppingCart;","import updateBookList from './book-list';\nimport updateShoppingCart from './shopping-cart';\n\nconst reducer = (state, action) => {\n    return {\n        bookList: updateBookList(state, action),\n        shoppingCart: updateShoppingCart(state, action)\n\n    }\n};\n\nexport default reducer;","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './servisec/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <BookstoreServiceProvider value={bookstoreService}>\n                <Router>\n                    <App />\n                </Router>\n            </BookstoreServiceProvider>\n        </ErrorBoundry>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}